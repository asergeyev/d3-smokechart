{"version":3,"file":"d3-smokechart.js","sources":["../dist/index.js"],"sourcesContent":["import { scaleLinear } from \"d3-scale\";\nimport { line } from \"d3-shape\";\nconst quantile = (probes, q) => {\n    if (q < 0 || q > 1 || isNaN(q))\n        throw new Error(`Unable to calculate ${q} quantile`);\n    var alq = (probes.length - 1) * q;\n    var idx = Math.floor(alq);\n    var diff = alq - idx;\n    return diff < 0.001 ? probes[idx] : Math.floor(probes[idx] * (1 - diff) + probes[idx + 1] * diff + 0.5);\n};\nconst smokeAreaConfig = [\n    [],\n    [[0, 1]],\n    [[0, 1], [.25, .75]],\n    [[0, 1], [.15, .85], [.3, .7]],\n    [[0, 1], [.1, .9], [.2, .8], [.3, .7]],\n    [[0, 1], [.1, .9], [.2, .8], [.3, .7], [.4, .6]]\n];\nexport const calculateSmokeBands = (v, bands) => {\n    const bandKind = smokeAreaConfig[bands];\n    return bandKind.map(([from, to]) => [quantile(v, from), quantile(v, to)]);\n};\nconst flameAreaConfig = [\n    [],\n    [.5],\n    [.5, .75],\n    [.5, .7, .9],\n    [.4, .55, .7, .85],\n    [.5, .6, .7, .8, .9]\n];\nexport const Smokechart = (smokeData, opts) => {\n    const props = {\n        scaleX: scaleLinear(),\n        scaleY: scaleLinear(),\n    };\n    let data = [];\n    let classSuffix = Math.floor(Math.random() * 100000);\n    const smoke = (smokeData, opts) => {\n        if (smokeData && !Array.isArray(smokeData)) {\n            opts = smokeData;\n            smokeData = undefined;\n        }\n        if (opts)\n            Object.assign(props, opts);\n        if (smokeData)\n            smoke.data(smokeData);\n        classSuffix = Math.floor(Math.random() * 100000);\n        return smoke;\n    };\n    smoke.data = (smokeData) => {\n        if (smokeData) {\n            data = smokeData.map(arr => [...arr.filter(n => !isNaN(n))].sort((a, b) => a - b));\n            return smoke;\n        }\n        return data;\n    };\n    smoke.adjustScaleRange = () => {\n        if (props.scaleX)\n            props.scaleX.domain([0, data.length]);\n        if (!props.scaleY)\n            return;\n        let minY = Infinity;\n        let maxY = -Infinity;\n        data.forEach(arr => {\n            if (arr.length) {\n                if (arr[0] < minY)\n                    minY = arr[0];\n                if (arr[arr.length - 1] > maxY)\n                    maxY = arr[arr.length - 1];\n            }\n        });\n        props.scaleY.domain([minY, maxY]);\n        return smoke;\n    };\n    smoke.scaleX = (newScale) => {\n        if (newScale) {\n            props.scaleX = newScale;\n            return smoke;\n        }\n        return props.scaleX;\n    };\n    smoke.scaleY = (newScale) => {\n        if (newScale) {\n            props.scaleY = newScale;\n            return smoke;\n        }\n        return props.scaleY;\n    };\n    smoke.line = (q = 0.5) => {\n        const l = line()\n            .x(d => (props.scaleX ? props.scaleX(d[0]) : d[0]))\n            .y(d => (props.scaleY ? props.scaleY(d[1]) : d[1]));\n        const quantileData = data.reduce((reslt, values, idx) => {\n            const p = quantile(values, q);\n            return [...reslt, [idx - 0.5, p], [idx + 0.5, p]];\n        }, []);\n        return [l(quantileData)];\n    };\n    smoke.smokeBands = (bCount = 2) => {\n        const l = line()\n            .x(d => (props.scaleX ? props.scaleX(d[0]) : d[0]))\n            .y(d => (props.scaleY ? props.scaleY(d[1]) : d[1]));\n        const bands = data.reduce((reslt, values, idx) => {\n            const bandData = calculateSmokeBands(values, bCount);\n            const x = idx - 0.5;\n            const bandLines = bandData.map(([y0, y1]) => l([\n                [x, y0],\n                [x, y1],\n                [x + 1, y1],\n                [x + 1, y0],\n            ]) || \"\");\n            return [...reslt, bandLines];\n        }, []);\n        return bands[0].map((_, columnIdx) => bands.map(row => row[columnIdx]).join(\"\"));\n    };\n    smoke.countErrors = (probeCount = -1) => {\n        const values = data.map(list => list.length);\n        const desired = probeCount >= 0 ? probeCount : Math.max(...values);\n        const underCount = values.map(ln => (desired > ln ? desired - ln : 0));\n        return underCount.reduce((ret, under, idx) => {\n            if (under > 0) {\n                const elems = [];\n                const x = props.scaleX ? props.scaleX(idx) : idx;\n                for (let errPos = 0; errPos < under; errPos++)\n                    elems.push({ x, errPos });\n                return [...ret, ...elems];\n            }\n            return ret;\n        }, []);\n    };\n    smoke.chart = (selection, args) => {\n        if (args === null || args === void 0 ? void 0 : args.bands) {\n            selection\n                .selectAll(\"path.smokechart-band\" + classSuffix)\n                .data(smoke.smokeBands(args === null || args === void 0 ? void 0 : args.bands))\n                .enter()\n                .append(\"path\")\n                .classed(\"smokechart-band\", true)\n                .attr(\"fill\", \"rgba(0,0,0,0.18)\")\n                .attr(\"d\", (d) => d);\n        }\n        selection\n            .selectAll(\"path.smokechart-line\" + classSuffix)\n            .data(smoke.line(0.5))\n            .enter()\n            .append(\"path\")\n            .classed(\"smokechart-line\", true)\n            .attr(\"stroke\", \"#ff0000\")\n            .attr(\"stroke-width\", 1.1)\n            .attr(\"fill\", \"transparent\")\n            .attr(\"d\", (d) => d);\n        if (args === null || args === void 0 ? void 0 : args.errors) {\n            const errors = smoke.countErrors() || [];\n            if (errors.length) {\n                let r = props.scaleX(0.25) - props.scaleX(0);\n                if (r < 2) {\n                    r = 2;\n                }\n                selection\n                    .selectAll(\"circle.smokechart-baseline\" + classSuffix)\n                    .data(errors)\n                    .enter()\n                    .append(\"circle\")\n                    .attr(\"cx\", (d) => d.x)\n                    .attr(\"cy\", (d) => r + d.errPos * r * 2.2)\n                    .attr(\"r\", r)\n                    .attr(\"fill\", \"#f30\");\n            }\n        }\n    };\n    return smoke(smokeData, opts);\n};\n"],"names":["scaleLinear","line"],"mappings":";;;;;;IAEA,MAAM,QAAQ,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK;IAChC,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;IAClC,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,oBAAoB,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IAC7D,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC;IACtC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC9B,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;IACzB,IAAI,OAAO,IAAI,GAAG,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;IAC5G,CAAC,CAAC;IACF,MAAM,eAAe,GAAG;IACxB,IAAI,EAAE;IACN,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACZ,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACxB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAClC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC1C,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACpD,CAAC,CAAC;AACU,UAAC,mBAAmB,GAAG,CAAC,CAAC,EAAE,KAAK,KAAK;IACjD,IAAI,MAAM,QAAQ,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC;IAC5C,IAAI,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9E,EAAE;AASU,UAAC,UAAU,GAAG,CAAC,SAAS,EAAE,IAAI,KAAK;IAC/C,IAAI,MAAM,KAAK,GAAG;IAClB,QAAQ,MAAM,EAAEA,mBAAW,EAAE;IAC7B,QAAQ,MAAM,EAAEA,mBAAW,EAAE;IAC7B,KAAK,CAAC;IACN,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;IAClB,IAAI,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC;IACzD,IAAI,MAAM,KAAK,GAAG,CAAC,SAAS,EAAE,IAAI,KAAK;IACvC,QAAQ,IAAI,SAAS,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;IACpD,YAAY,IAAI,GAAG,SAAS,CAAC;IAC7B,YAAY,SAAS,GAAG,SAAS,CAAC;IAClC,SAAS;IACT,QAAQ,IAAI,IAAI;IAChB,YAAY,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACvC,QAAQ,IAAI,SAAS;IACrB,YAAY,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAClC,QAAQ,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC;IACzD,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK,CAAC;IACN,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,SAAS,KAAK;IAChC,QAAQ,IAAI,SAAS,EAAE;IACvB,YAAY,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/F,YAAY,OAAO,KAAK,CAAC;IACzB,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK,CAAC;IACN,IAAI,KAAK,CAAC,gBAAgB,GAAG,MAAM;IACnC,QAAQ,IAAI,KAAK,CAAC,MAAM;IACxB,YAAY,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAClD,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM;IACzB,YAAY,OAAO;IACnB,QAAQ,IAAI,IAAI,GAAG,QAAQ,CAAC;IAC5B,QAAQ,IAAI,IAAI,GAAG,CAAC,QAAQ,CAAC;IAC7B,QAAQ,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI;IAC5B,YAAY,IAAI,GAAG,CAAC,MAAM,EAAE;IAC5B,gBAAgB,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI;IACjC,oBAAoB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAClC,gBAAgB,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI;IAC9C,oBAAoB,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC/C,aAAa;IACb,SAAS,CAAC,CAAC;IACX,QAAQ,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IAC1C,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK,CAAC;IACN,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,QAAQ,KAAK;IACjC,QAAQ,IAAI,QAAQ,EAAE;IACtB,YAAY,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;IACpC,YAAY,OAAO,KAAK,CAAC;IACzB,SAAS;IACT,QAAQ,OAAO,KAAK,CAAC,MAAM,CAAC;IAC5B,KAAK,CAAC;IACN,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,QAAQ,KAAK;IACjC,QAAQ,IAAI,QAAQ,EAAE;IACtB,YAAY,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;IACpC,YAAY,OAAO,KAAK,CAAC;IACzB,SAAS;IACT,QAAQ,OAAO,KAAK,CAAC,MAAM,CAAC;IAC5B,KAAK,CAAC;IACN,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,KAAK;IAC9B,QAAQ,MAAM,CAAC,GAAGC,YAAI,EAAE;IACxB,aAAa,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,aAAa,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,KAAK;IACjE,YAAY,MAAM,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAC1C,YAAY,OAAO,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9D,SAAS,EAAE,EAAE,CAAC,CAAC;IACf,QAAQ,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACjC,KAAK,CAAC;IACN,IAAI,KAAK,CAAC,UAAU,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK;IACvC,QAAQ,MAAM,CAAC,GAAGA,YAAI,EAAE;IACxB,aAAa,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,aAAa,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,KAAK;IAC1D,YAAY,MAAM,QAAQ,GAAG,mBAAmB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACjE,YAAY,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;IAChC,YAAY,MAAM,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;IAC3D,gBAAgB,CAAC,CAAC,EAAE,EAAE,CAAC;IACvB,gBAAgB,CAAC,CAAC,EAAE,EAAE,CAAC;IACvB,gBAAgB,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;IAC3B,gBAAgB,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;IAC3B,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC;IACtB,YAAY,OAAO,CAAC,GAAG,KAAK,EAAE,SAAS,CAAC,CAAC;IACzC,SAAS,EAAE,EAAE,CAAC,CAAC;IACf,QAAQ,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,SAAS,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACzF,KAAK,CAAC;IACN,IAAI,KAAK,CAAC,WAAW,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,KAAK;IAC7C,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;IACrD,QAAQ,MAAM,OAAO,GAAG,UAAU,IAAI,CAAC,GAAG,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC;IAC3E,QAAQ,MAAM,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,EAAE,KAAK,OAAO,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/E,QAAQ,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,KAAK;IACtD,YAAY,IAAI,KAAK,GAAG,CAAC,EAAE;IAC3B,gBAAgB,MAAM,KAAK,GAAG,EAAE,CAAC;IACjC,gBAAgB,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IACjE,gBAAgB,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,KAAK,EAAE,MAAM,EAAE;IAC7D,oBAAoB,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;IAC9C,gBAAgB,OAAO,CAAC,GAAG,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC;IAC1C,aAAa;IACb,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS,EAAE,EAAE,CAAC,CAAC;IACf,KAAK,CAAC;IACN,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,SAAS,EAAE,IAAI,KAAK;IACvC,QAAQ,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE;IACpE,YAAY,SAAS;IACrB,iBAAiB,SAAS,CAAC,sBAAsB,GAAG,WAAW,CAAC;IAChE,iBAAiB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/F,iBAAiB,KAAK,EAAE;IACxB,iBAAiB,MAAM,CAAC,MAAM,CAAC;IAC/B,iBAAiB,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC;IACjD,iBAAiB,IAAI,CAAC,MAAM,EAAE,kBAAkB,CAAC;IACjD,iBAAiB,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACrC,SAAS;IACT,QAAQ,SAAS;IACjB,aAAa,SAAS,CAAC,sBAAsB,GAAG,WAAW,CAAC;IAC5D,aAAa,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAClC,aAAa,KAAK,EAAE;IACpB,aAAa,MAAM,CAAC,MAAM,CAAC;IAC3B,aAAa,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC;IAC7C,aAAa,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC;IACtC,aAAa,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC;IACtC,aAAa,IAAI,CAAC,MAAM,EAAE,aAAa,CAAC;IACxC,aAAa,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACjC,QAAQ,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE;IACrE,YAAY,MAAM,MAAM,GAAG,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC;IACrD,YAAY,IAAI,MAAM,CAAC,MAAM,EAAE;IAC/B,gBAAgB,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7D,gBAAgB,IAAI,CAAC,GAAG,CAAC,EAAE;IAC3B,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,iBAAiB;IACjB,gBAAgB,SAAS;IACzB,qBAAqB,SAAS,CAAC,4BAA4B,GAAG,WAAW,CAAC;IAC1E,qBAAqB,IAAI,CAAC,MAAM,CAAC;IACjC,qBAAqB,KAAK,EAAE;IAC5B,qBAAqB,MAAM,CAAC,QAAQ,CAAC;IACrC,qBAAqB,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3C,qBAAqB,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC;IAC9D,qBAAqB,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACjC,qBAAqB,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC1C,aAAa;IACb,SAAS;IACT,KAAK,CAAC;IACN,IAAI,OAAO,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAClC;;;;;;;;;;;;;"}